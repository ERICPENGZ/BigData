
数据分片与路由

	一.哈希

		1.hash分片方式_RoundRobin
			一层取模

		2.虚拟桶
			Membase：在待存储记录和物理机之间引入了虚拟桶层，第一层：所有记录首先通过哈希函数映射到对应的虚拟桶，记录和虚拟桶是多对一的映射关系。一个backet包含多条record。第二层：虚拟桶到物理机，通过查表来实现的。Membase通过内存表来管理这层映射关系。

		3.一致哈希性算法
			分布式哈希表DHT用到的一种实现方式。
			m = 5，哈希空间：0~31.

		4.范围分片
			首先将所有记录的主键key进行排序，然后再排好序的主键空间里将记录划分成数据分片，每个数据分片存储有序的主键空间片段内的所有记录。在实现时，保持一个分片的映射表，表的每一项记录数据分片的最小主键及其对应的物理主机地址。

==================================================

数据复制与一致性

	一.基本原则与设计理念

		1.CAP_不可兼得
			强一致性（更新操作的效果与只有单份数据是一致的），可用性（限定延时），分区容忍性。
			CP：数据无副本，满足高可用和分区容忍
			AC：没有网络分区，满足同时更新和延时限定
			AP：跟AC存在权衡。存在P（发生了网络分区导致两台机器无法通信），则返回数据必然会加长延时或者存在不一致性。

		2.三个步骤
			1.首先识别网络分区的发生。2.进入分区的模式。3.恢复数据的一致性和弥补分区模式中产生的错误。

		3.ACID_针对数据库系统
			1.原子性：事务全部执行，要么不执行
			2.一致性：A+B=100，A改，B也要响应修改。满足一致性约束
			3.事务独立（隔离性）：事务之间需要序列化执行。事务执行时互不影响。
			4.持久性：运行成功后，对系统的更新状态是永久的，不会无故的回滚

		4.Base原则_针对云平台/nosql系统
			1.基本可用：允许偶尔的fail
			2.软状态：不要求完全一致，处于有状态和无状态之间的中间属性。
			3.最终一致：在给定的时间窗口内达到一致
			summary：牺牲了强一致性来保持高可用性。

		5.CAP/ACID/BASE的关系
			1.ACID和CAP中c,ACID中的C的一致性要求比CAP中的广。ACID：数据操作的一致性，在出现网络分区的时候不可能完成。CAP：强一致性，多副本对外表现为单副本
			2.当出现网络分区时，ACID中的隔离性要求只能在一个分区内执行：因为数据序列化需要通信。
			3.当出现分区时，每个分区尽可能的执行CAP原则

		6.幂等性
			f(f(x)) = f(x);
			调用方反复执行同一个操作与执行一次操作的效果相同。在调用方执行操作，但因为网络原因无法得到调用成功的响应时，会认为调用失败而在此调用。


	二.一致性模型
		一致性关系图(p41)
		
		1.强一致性：
		









